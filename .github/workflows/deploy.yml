# This is a basic workflow to help you get started with Actions

name: Backend Deploy

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "develop" branch
  push:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# 본인이 설정한 값을 여기서 채워넣습니다.
# 리전, 버킷 이름, CodeDeploy 앱 이름, CodeDeploy 배포 그룹 이름
env:
  AWS_REGION: ap-northeast-2
  S3_BUCKET_NAME: 1team-s3
  S3_BUCKET_BACKEND: 1team-s3/build/backend
  CODE_DEPLOY_APPLICATION_NAME: lookforbutler
  CODE_DEPLOY_DEPLOYMENT_GROUP_NAME: lookforbutler-backend

permissions:
  contents: read

jobs:
  deploy:
    name: Deploy Backend
    runs-on: ubuntu-latest
    environment: production

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # (1) 기본 체크아웃
      - name: Checkout
        uses: actions/checkout@v3
        with:
          sparse-checkout: backend

      # (2) JDK 17 세팅
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: "zulu"
          java-version: "17"

      # (3) S3 application-prod.yml 세팅
      - name: Download application-prod.yml
        uses: keithweaver/aws-s3-github-action@v1.0.0 # Verifies the recursive flag
        with:
          command: cp
          source: ${{ secrets.S3_PROD_YML }}
          destination: ./backend/api/src/main/resources
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_KEY }}
          aws_region: ${{ secrets.AWS_REGION }}

      # (4) S3 application-test.yml 세팅
#      - name: Download application-test.yml
#        uses: keithweaver/aws-s3-github-action@v1.0.0 # Verifies the recursive flag
#        with:
#          command: cp
#          source: ${{ secrets.S3_TEST_YML }}
#          destination: ./backend/api/src/main/resources
#          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY }}
#          aws_secret_access_key: ${{ secrets.AWS_SECRET_KEY }}
#          aws_region: ${{ secrets.AWS_REGION }}

      # (5) 현재 위치 파악하는 cmd
      - name: cmd
        run: |
          pwd
          ls -la
          # cd ./backend/api/src/main/resources
          echo "ls ./backend/api/src/main/resources"
          ls -la ./backend/api/src/main/resources
          sudo chmod +x ./backend/api/src/main/resources/application-prod.yml
          ls -la ./backend/api/src/main/resources

      # (6) Gradle 세팅
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          arguments: build -x test
          build-root-directory: backend

      # # (6) Grant execute permission to gradlew
      # - name: Grant execute permission to gradlew
      #   run: chmod +x ./backend/gradlew

      # # (7) Gradle 빌드
      # - name: Execute Gradle build
      #   run: |
      #     cd backend
      #     ./gradlew test -i

      # (7) AWS 인증 (IAM 사용자 Access Key, Secret Key 활용)
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # (8) 빌드 결과물을 S3 버킷에 업로드
      - name: Upload to AWS S3
        run: |
          aws deploy push \
            --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
            --ignore-hidden-files \
            --s3-location s3://$S3_BUCKET_NAME/build/backend/app.zip \
            --source ./backend

      # (9) S3 버킷에 있는 파일을 대상으로 CodeDeploy 실행
      - name: Deploy to AWS EC2 from S3
        run: |
          aws deploy create-deployment \
            --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
            --deployment-config-name CodeDeployDefault.AllAtOnce \
            --deployment-group-name ${{ env.CODE_DEPLOY_DEPLOYMENT_GROUP_NAME }} \
            --s3-location bucket=$S3_BUCKET_NAME,key=build/backend/app.zip,bundleType=zip
