# This is a basic workflow to help you get started with Actions

name: Frontend Deploy

## Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "develop" branch
  push:
    branches: [ "deployment" ]
  pull_request:
    branches: [ "deployment" ]
#
#  # Allows you to run this workflow manually from the Actions tab
#  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:
    name: Deploy Frontend
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # (1) 기본 체크아웃
      - name: Checkout
        uses: actions/checkout@v4

      # (2) Node 세팅
      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 20

#      # (3) npm install
#      - name: Npm Install
#        run: npm ci

      # (3) .env.production 세팅
      - name: Set secret file (prod)
        run: |
          ls -la
          cd mutsa-project
          touch .env.production
          pwd
          ls -la
          echo "${{ secrets.ENV_PRODUCTION }}" | base64 --decode > .env.production
          chmod 600 ./.env.production

      # (4) package.json의 있는 version을 기반으로 값을 불러옴
      - name: Save version
        id: version
        run: echo ::set-output name=tag::$(echo $(node -p -e "require('./package.json').version"))

      # (5) Docker Hub 로그인
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESSTOKEN }}

      # (6) Docker 이미지 빌드
      - name: Build Docker image
        run: docker build --tag ${{secrets.DOCKERHUB_REPOSITORY}}:$version -t ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPOSITORY }} ./

      # (7) Docker Hub에 private 이미지로 푸시
      - name: Push Docker image to Docker Hub
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPOSITORY }}

      # (8) Deploy to Front Server
      - name: Deploy to Front Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.FRONT_IP }} # Front Server IP
          username: ${{ secrets.FRONT_USER }}
          password: ${{ secrets.FRONT_PASSWORD }}
          port: ${{ secrets.FRONT_PORT }} # 접속포트
          script: |
            sudo docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" -p "${{ secrets.DOCKERHUB_PASSWORD }}"
            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPOSITORY }}:latest
            sudo docker stop ${{ secrets.DOCKERHUB_REPOSITORY }} || true
            sudo docker rm ${{ secrets.DOCKERHUB_REPOSITORY }} || true
            sudo docker image prune -a || y
            sudo docker run -d --name ${{ secrets.DOCKERHUB_REPOSITORY }} ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPOSITORY }}:latest